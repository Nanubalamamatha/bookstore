export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      books: {
        Row: {
          author: string | null
          id: string
          price: number | null
          stock: number | null
          title: string | null
        }
        Insert: {
          author?: string | null
          id?: string
          price?: number | null
          stock?: number | null
          title?: string | null
        }
        Update: {
          author?: string | null
          id?: string
          price?: number | null
          stock?: string | null
          title?: string | null
        }
        Relationships: []
      }
      cart_items: {
        Row: {
          book_id: string | null
          id: string
          quantity: number | null
          user_id: string | null
        }
        Insert: {
          book_id?: string | null
          id?: string
          quantity?: number | null
          user_id?: string | null
        }
        Update: {
          book_id?: string | null
          id?: string
          quantity?: number | null
          user_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "cart_items_book_id_fkey"
            columns: ["book_id"]
            referencedRelation: "books"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "cart_items_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      order_items: {
        Row: {
          book_id: string | null
          id: string
          order_id: string | null
          price: number | null
          quantity: number | null
        }
        Insert: {
          book_id?: string | null
          id?: string
          order_id?: string | null
          price?: number | null
          quantity?: number | null
        }
        Update: {
          book_id?: string | null
          id?: string
          order_id?: string | null
          price?: number | null
          quantity?: number | null
        }
        Relationships: [
          {
            foreignKeyName: "order_items_book_id_fkey"
            columns: ["book_id"]
            referencedRelation: "books"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "order_items_order_id_fkey"
            columns: ["order_id"]
            referencedRelation: "orders"
            referencedColumns: ["id"]
          }
        ]
      }
      orders: {
        Row: {
          id: string
          status: string | null
          total_amount: number | null
          user_id: string | null
        }
        Insert: {
          id?: string
          status?: string | null
          total_amount?: number | null
          user_id?: string | null
        }
        Update: {
          id?: string
          status?: string | null
          total_amount?: number | null
          user_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "orders_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

